name: 'Build basic docker container'

on:
  schedule:
    - cron: 0 4 * * THU
  push:
    branches:
      - main

jobs:
  docker:
    name: 'Build docker container'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: mariadb
            context: ./containers/mariadb
            target: ''
            version: 10.7
            build-args: ''
          - name: proxy
            context: ./containers/proxy
            target: ''
            version: 1.22
            build-args: |
              NGINX_VERSION=1.22
          - name: redis
            context: ./containers/redis
            target: ''
            version: 6.2
            build-args: |
              REDIS_VERSION=6.2
          - name: varnish
            context: ./containers/varnish
            target: ''
            version: 6.6
            build-args: |
              VARNISH_VERSION=6.6
          - name: elasticsearch
            context: ./containers/elasticsearch
            target: ''
            version: 7.17
            build-args: |
              ELASTICSEARCH_VERSION=7.17
          - name: webserver-neos
            context: ./containers/webserver
            target: 'webserver-neos'
            version: 2.4
            build-args: |
              HTTPD_VERSION=2.4
          - name: webserver-typo3
            context: ./containers/webserver
            target: 'webserver-typo3'
            version: 2.4
            build-args: |
              HTTPD_VERSION=2.4
          - name: webserver-shopware
            context: ./containers/webserver
            target: 'webserver-shopware'
            version: 2.4
            build-args: |
              HTTPD_VERSION=2.4
          - name: webserver-static
            context: ./containers/webserver
            target: 'webserver-static'
            version: 2.4
            build-args: |
              HTTPD_VERSION=2.4
          - name: styleguide
            context: ./containers/styleguide
            target: ''
            version: 1.22
            build-args: |
              NGINX_VERSION=1.22
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04

    env:
      DOCKER_IMAGE_LATEST: ghcr.io/netlogix/docker/${{ matrix.image.name }}:latest
      DOCKER_IMAGE_VERSION: ghcr.io/netlogix/docker/${{ matrix.image.name }}:${{ matrix.image.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ matrix.image.context }}
          target: ${{ matrix.image.target }}
          file: ${{ matrix.image.context }}/Dockerfile
          build-args: ${{ matrix.image.build-args }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE_LATEST }},${{ env.DOCKER_IMAGE_VERSION }}
          platforms: linux/amd64,linux/arm64
#          cache-from: type=gha, scope=${{ github.workflow }}
#          cache-to: type=gha, scope=${{ github.workflow }}
